//#include "charnode.h"


// TEMPLATE FUNCTION - DEFINITION IN .H

////Static variable
//int Node::s_size;
////----------------------------------------------------------------------------------------------
//Node::CharNode()
//{
//    //Default constructor
//}
////----------------------------------------------------------------------------------------------
//Node::~Node()
//{
//    s_size--;
//}

////----------------------------------------------------------------------------------------------
//void Node::print(Node<T> *list)
//{
//    while(list)
//    {
//        std::cout << list->m_data << "\n";
//        list = list->m_next;
//    }
//}
////----------------------------------------------------------------------------------------------

//void Node::printBackwards()
//{
//    if(m_next)
//    {
//        m_next->printBackwards();
//    }
//    std::cout << m_data <<" | ";
//}

////----------------------------------------------------------------------------------------------

////GETTERS
//Node *Node::getNext() const
//{
//    return m_next;
//}
////----------------------------------------------------------------------------------------------
//char Node::getData() const
//{
//    return m_data;
//}
////----------------------------------------------------------------------------------------------
//int Node::getSize() const
//{
//    return s_size;
//}
////----------------------------------------------------------------------------------------------
////Operator overload
//std::ostream& operator<< (std::ostream &out, const Node *charNode)
//{
//    out << charNode->m_data;
//    return out;
//}

